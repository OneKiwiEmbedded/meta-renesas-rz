From: Hao Bui <hao.bui.yg@renesas.com>
Date: Fri, 21 Oct 2022 16:02:50 +0700
Subject: [PATCH] kernel-module-mmngr: Fix issue of NULL pointer with
 dma_alloc_coherent

On v5.10 kernel, dma_alloc_coherent requires input device param is not
NULL. Otherwise, kernel module may crash. This patch creates a dummy
device and output it to dma_alloc_coherent when handling memory
allocations in the first reserved CMA area of RZ/G1 platforms.

Signed-off-by: Hao Bui <hao.bui.yg@renesas.com>
---

diff --git a/drv/mmngr_drv.c b/drv/mmngr_drv.c
index a0555b9..97b64a4 100644
--- a/drv/mmngr_drv.c
+++ b/drv/mmngr_drv.c
@@ -90,6 +90,7 @@ static void			*top_impmbd1;
 static void			*top_imuctr19;
 static void			*top_imuctr22;
 static void			*top_prr;
+static struct device		*dummy_device;
 
 static int mm_alloc_kh_in_kernel(struct device *mm_dev,
 				unsigned long size,
@@ -1050,9 +1051,22 @@ static int mm_init(void)
 		return -1;
 	}
 	misc_register(&misc);
-	p->mm_dev = NULL;
+
+	/* handle for allocation in 1st CMA area (kernel) */
+	dummy_device = kzalloc(sizeof(struct device), GFP_KERNEL);
+	if (dummy_device == NULL)
+		return -1;
+
+	dummy_device->cma_area = 0;
+	/*
+	 * dummy_device will serve as !NULL device
+	 * for mem alloc in 1st CMA region
+	 */
+	p->mm_dev = dummy_device;
+
+	/* handle for allocation in 2nd CMA area (MMP) */
 	p->mm_dev_reserve = misc.this_device;
-	p->mm_dev_reserve->coherent_dma_mask = ~0;
+	dma_set_mask_and_coherent(p->mm_dev_reserve, DMA_BIT_MASK(32));
 	mm_drvdata = p;
 
 	spin_lock_init(&lock);
-- 
2.7.4

